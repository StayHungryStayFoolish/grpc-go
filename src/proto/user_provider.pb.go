// Code generated by protoc-gen-go. DO NOT EDIT.
// source: src/proto/user_provider.proto

package io_stayhungrystayfoolish_github_grpcgo

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// request
type UserIdRequest struct {
	Id                   uint64   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UserIdRequest) Reset()         { *m = UserIdRequest{} }
func (m *UserIdRequest) String() string { return proto.CompactTextString(m) }
func (*UserIdRequest) ProtoMessage()    {}
func (*UserIdRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_830ed6e3bf89aade, []int{0}
}

func (m *UserIdRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserIdRequest.Unmarshal(m, b)
}
func (m *UserIdRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserIdRequest.Marshal(b, m, deterministic)
}
func (m *UserIdRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserIdRequest.Merge(m, src)
}
func (m *UserIdRequest) XXX_Size() int {
	return xxx_messageInfo_UserIdRequest.Size(m)
}
func (m *UserIdRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UserIdRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UserIdRequest proto.InternalMessageInfo

func (m *UserIdRequest) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

// response
type UserVoReplay struct {
	Id                   uint64   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Email                string   `protobuf:"bytes,3,opt,name=email,proto3" json:"email,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UserVoReplay) Reset()         { *m = UserVoReplay{} }
func (m *UserVoReplay) String() string { return proto.CompactTextString(m) }
func (*UserVoReplay) ProtoMessage()    {}
func (*UserVoReplay) Descriptor() ([]byte, []int) {
	return fileDescriptor_830ed6e3bf89aade, []int{1}
}

func (m *UserVoReplay) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserVoReplay.Unmarshal(m, b)
}
func (m *UserVoReplay) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserVoReplay.Marshal(b, m, deterministic)
}
func (m *UserVoReplay) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserVoReplay.Merge(m, src)
}
func (m *UserVoReplay) XXX_Size() int {
	return xxx_messageInfo_UserVoReplay.Size(m)
}
func (m *UserVoReplay) XXX_DiscardUnknown() {
	xxx_messageInfo_UserVoReplay.DiscardUnknown(m)
}

var xxx_messageInfo_UserVoReplay proto.InternalMessageInfo

func (m *UserVoReplay) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *UserVoReplay) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *UserVoReplay) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func init() {
	proto.RegisterType((*UserIdRequest)(nil), "UserIdRequest")
	proto.RegisterType((*UserVoReplay)(nil), "UserVoReplay")
}

func init() { proto.RegisterFile("src/proto/user_provider.proto", fileDescriptor_830ed6e3bf89aade) }

var fileDescriptor_830ed6e3bf89aade = []byte{
	// 212 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x92, 0x2d, 0x2e, 0x4a, 0xd6,
	0x2f, 0x28, 0xca, 0x2f, 0xc9, 0xd7, 0x2f, 0x2d, 0x4e, 0x2d, 0x8a, 0x2f, 0x28, 0xca, 0x2f, 0xcb,
	0x4c, 0x49, 0x2d, 0xd2, 0x03, 0x8b, 0x29, 0xc9, 0x73, 0xf1, 0x86, 0x16, 0xa7, 0x16, 0x79, 0xa6,
	0x04, 0xa5, 0x16, 0x96, 0xa6, 0x16, 0x97, 0x08, 0xf1, 0x71, 0x31, 0x65, 0xa6, 0x48, 0x30, 0x2a,
	0x30, 0x6a, 0xb0, 0x04, 0x31, 0x65, 0xa6, 0x28, 0x79, 0x70, 0xf1, 0x80, 0x14, 0x84, 0xe5, 0x07,
	0xa5, 0x16, 0xe4, 0x24, 0x56, 0xa2, 0xcb, 0x0b, 0x09, 0x71, 0xb1, 0xe4, 0x25, 0xe6, 0xa6, 0x4a,
	0x30, 0x29, 0x30, 0x6a, 0x70, 0x06, 0x81, 0xd9, 0x42, 0x22, 0x5c, 0xac, 0xa9, 0xb9, 0x89, 0x99,
	0x39, 0x12, 0xcc, 0x60, 0x41, 0x08, 0xc7, 0xc8, 0x0e, 0x62, 0x52, 0x00, 0xd4, 0x01, 0x42, 0x7a,
	0x5c, 0xdc, 0xe9, 0xa9, 0x25, 0x4e, 0x95, 0x10, 0xfb, 0x85, 0xf8, 0xf4, 0x50, 0x1c, 0x22, 0xc5,
	0xab, 0x87, 0x6c, 0xaf, 0x12, 0x83, 0x53, 0x00, 0x97, 0x5a, 0x66, 0xbe, 0x5e, 0x71, 0x49, 0x62,
	0x65, 0x46, 0x69, 0x5e, 0x7a, 0x51, 0x25, 0x88, 0x95, 0x96, 0x9f, 0x9f, 0x93, 0x59, 0x9c, 0xa1,
	0x97, 0x9e, 0x59, 0x92, 0x51, 0x9a, 0xa4, 0x97, 0x5e, 0x54, 0x90, 0x9c, 0x9e, 0x1f, 0x45, 0xa4,
	0xba, 0x24, 0x36, 0x70, 0x18, 0x18, 0x03, 0x02, 0x00, 0x00, 0xff, 0xff, 0x36, 0xce, 0x0c, 0xcd,
	0x24, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// UserProviderClient is the client API for UserProvider service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type UserProviderClient interface {
	GetByUserId(ctx context.Context, in *UserIdRequest, opts ...grpc.CallOption) (*UserVoReplay, error)
}

type userProviderClient struct {
	cc *grpc.ClientConn
}

func NewUserProviderClient(cc *grpc.ClientConn) UserProviderClient {
	return &userProviderClient{cc}
}

func (c *userProviderClient) GetByUserId(ctx context.Context, in *UserIdRequest, opts ...grpc.CallOption) (*UserVoReplay, error) {
	out := new(UserVoReplay)
	err := c.cc.Invoke(ctx, "/UserProvider/getByUserId", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// UserProviderServer is the server API for UserProvider service.
type UserProviderServer interface {
	GetByUserId(context.Context, *UserIdRequest) (*UserVoReplay, error)
}

func RegisterUserProviderServer(s *grpc.Server, srv UserProviderServer) {
	s.RegisterService(&_UserProvider_serviceDesc, srv)
}

func _UserProvider_GetByUserId_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UserIdRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserProviderServer).GetByUserId(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/UserProvider/GetByUserId",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserProviderServer).GetByUserId(ctx, req.(*UserIdRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _UserProvider_serviceDesc = grpc.ServiceDesc{
	ServiceName: "UserProvider",
	HandlerType: (*UserProviderServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "getByUserId",
			Handler:    _UserProvider_GetByUserId_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "src/proto/user_provider.proto",
}
